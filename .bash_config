
# ---------------------------
# --- PS1 WITH GIT BRANCH ---
# ---------------------------

parse_git_branch() {
  LOCAL=$(git rev-parse @ 2> /dev/null)
  REMOTE=$(git rev-parse ${1:-'@{u}'} 2> /dev/null)
  BASE=$(git merge-base @ ${1:-'@{u}'} 2> /dev/null)

  arrow=""
  if [ ! -z "$LOCAL" ] && [ ! -z "$REMOTE" ] && [ ! -z "$BASE" ];  then
    if [ $LOCAL = $REMOTE ]; then
      # no changes
      arrow="✓"
    elif [ $LOCAL = $BASE ]; then
      # need to pull
      arrow="↓"
    elif [ $REMOTE = $BASE ]; then
      # need to push
      arrow="↑"
    else
      # most of the time, pull & push needed
      # rarely an error with git project
      arrow="↑↓"
    fi
  fi

  git branch 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/(\1$arrow)/"
}

# Prompt colours
export arrow1C="\[\e[38;5;236m\]"
export arrow2C="\[\e[38;5;241m\]"
export arrow3C="\[\e[38;5;247m\]"
export panC="\[\e[38;5;37m\]"
export pipeC="\[\e[38;5;241m\]"
export userC="\[\e[38;5;37m\]"
export folderC="\[\e[38;5;241m\]"
export gitC="\[\033[01;33m\]"
export dollarC="\[\033[01;33m\]"
export normalC="\[\033[00m\]"

export PS1="${arrow1C}> ${arrow2C}> ${arrow3C}>${panC} PAN ${pipeC}|${userC} \u ${folderC}\w${gitC} \$(parse_git_branch) \n${dollarC}\$ ${normalC}"


# --------------
# --- COLORS ---
# --------------

# Colours have names too. Stolen from Arch wiki
export txtblk='\[\e[0;30m\]' # Black - Regular
export txtred='\[\e[0;31m\]' # Red
export txtgrn='\[\e[0;32m\]' # Green
export txtylw='\[\e[0;33m\]' # Yellow
export txtblu='\[\e[0;34m\]' # Blue
export txtpur='\[\e[0;35m\]' # Purple
export txtcyn='\[\e[0;36m\]' # Cyan
export txtwht='\[\e[0;37m\]' # White
export bldblk='\[\e[1;30m\]' # Black - Bold
export bldred='\[\e[1;31m\]' # Red
export bldgrn='\[\e[1;32m\]' # Green
export bldylw='\[\e[1;33m\]' # Yellow
export bldblu='\[\e[1;34m\]' # Blue
export bldpur='\[\e[1;35m\]' # Purple
export bldcyn='\[\e[1;36m\]' # Cyan
export bldwht='\[\e[1;37m\]' # White
export unkblk='\[\e[4;30m\]' # Black - Underline
export undred='\[\e[4;31m\]' # Red
export undgrn='\[\e[4;32m\]' # Green
export undylw='\[\e[4;33m\]' # Yellow
export undblu='\[\e[4;34m\]' # Blue
export undpur='\[\e[4;35m\]' # Purple
export undcyn='\[\e[4;36m\]' # Cyan
export undwht='\[\e[4;37m\]' # White
export bakblk='\[\e[40m\]'   # Black - Background
export bakred='\[\e[41m\]'   # Red
export badgrn='\[\e[42m\]'   # Green
export bakylw='\[\e[43m\]'   # Yellow
export bakblu='\[\e[44m\]'   # Blue
export bakpur='\[\e[45m\]'   # Purple
export bakcyn='\[\e[46m\]'   # Cyan
export bakwht='\[\e[47m\]'   # White
export txtrst='\[\e[0m\]'    # Text Reset

# To have colors for ls
export CLICOLOR=1
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.svgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01; 35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:'

# Color for manpages in less makes manpages a little easier to read
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'


# -----------------
# --- Pre Check ---
# -----------------

# basic stuff on local Linux AWS WorkSpace
# echo "---------------------------------------------------"
# echo "Terminal pre-check: output active versions:"

# python_version=$(python -V 2>&1)
# if [[ -z "$python_version" ]]; then
#   echo "WARN: Python missing in this terminal  o_o"
# else
#   echo "Python:   ${python_version#* }"
# fi

# pip_version=$(pip --version 2>&1)
# if [[ -z "$pip_version" ]]; then
#   echo "WARN: pip missing in this terminal  o_o"
# else
#   echo "pip:      $(echo $pip_version | cut -d' ' -f2)"
# fi

# boto3_version=$(pip show boto3 2>&1 | sed -n 2p)
# if [[ -z "$boto3_version" ]]; then
#   echo "WARN: boto3 missing in this terminal  o_o"
# else
#   echo "boto3:    $(echo $boto3_version | cut -d' ' -f2)"
# fi

# aws_version=$(aws --version 2>&1)
# if [[ -z "$aws_version" ]]; then
#   echo "WARN: AWS CLI missing in this terminal  o_o"
# else
#   echo "AWS CLI:  $(echo ${aws_version%% *} | cut -d'/' -f2)"
# fi

# node_version=$(node -v 2>&1)
# if [[ -z "$node_version" ]]; then
#   echo "WARN: Node.js missing in this terminal  o_o" 
# else
#   echo "Node.js:  $node_version"
# fi

# cdk_version=$(cdk --version 2>&1)
# if [[ -z "$cdk_version" ]]; then
#   echo "WARN: CDK missing in this terminal  o_o" 
# else
#   echo "CDK:      ${cdk_version%% *}"
# fi
# echo "Now ready to go with this terminal."
# echo "---------------------------------------------------"
